#!/usr/bin/perl -w
# objdump-info -- lintian collection script

# The original shell script version of this script is
# Copyright (C) 1998 Christian Schwarz
#
# This version, including support for etch's binutils, is
# Copyright (C) 2008 Adam D. Barratt
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, you can find it on the World Wide
# Web at http://www.gnu.org/copyleft/gpl.html, or write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

package Lintian::coll::objdump_info;

no lib '.';

use strict;
use warnings;
use autodie;

use FileHandle;

use lib "$ENV{'LINTIAN_ROOT'}/lib/";
use Lintian::Collect;
use Lintian::Command qw(spawn reap);
use Lintian::Util qw(locate_helper_tool);

my $helper = locate_helper_tool('coll/objdump-info-helper');

sub collect {
    my ($pkg, $type, $dir) = @_;
    my $info = Lintian::Collect->new($pkg, $type, $dir);

    if (-e "$dir/objdump-info") {
        unlink("$dir/objdump-info");
    }

    if (-e "$dir/objdump-info.gz") {
        unlink("$dir/objdump-info.gz");
    }

    chdir("$dir/unpacked");

    my %opts = (
        pipe_in => FileHandle->new,
        out => "$dir/objdump-info.gz",
        fail => 'error'
    );
    spawn(\%opts, ['xargs', '-0r', $helper], '|', ['gzip', '-9nc']);
    $opts{pipe_in}->blocking(1);

    foreach my $bin ($info->sorted_index) {
        next if not $bin->is_file;
        my $fname = $bin->name;
        my $finfo = $info->file_info($fname);
        my $check = 0;

        if ($finfo =~ m/\bELF\b/ or $finfo =~ m/\bcurrent ar archive\b/) {
            $check = 1;
        } elsif ($finfo =~ m/\bcurrent ar archive\b/) {
            # Probably a static library
            $check = 1 if $fname =~ m/\.a$/;
        }
        printf {$opts{pipe_in}} "%s\0", $fname if $check;
    }

    close($opts{pipe_in});
    reap(\%opts);

    return;
}

collect(@ARGV) unless caller;

1;

# Local Variables:
# indent-tabs-mode: nil
# cperl-indent-level: 4
# End:
# vim: syntax=perl sw=4 sts=4 sr et
